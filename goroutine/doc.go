package main

/*
 * 常见的并行编程有多种模型, 主要有多线程, 消息传递等; 理论上来说, 多线程和
 * 基于消息的并发编程等价, 由于多线程并发模型可自然对应到多核处理器, 主流的
 * 操作系统因此都提供了系统级的多线程支持, 因此多线程编程模型逐步被吸纳到主流
 * 的编程语言特性或语言扩展库中; 而主流编程语言对基于消息的并发编程模型支持
 * 较少, Erlang 语言是支持基于消息传递并发编程模型的代表者, 它的并发体中间不
 * 共享内存, go 语言是基于消息并发模型的集大成者, 它将基于 CSP 模型的并发编程
 * 内置到语言中, 通过一个 go 关键字就可以启动一个 Goroutine , 与 Erlang 不同,
 * go 语言的 Goroutine 之间是共享内存的.
 */
