// hello.h
//
// 在编程中, 抽象和模块化是复杂问题简单化的通用手段, 当代码语句多变时, 可以将
// 相似的代码封装到一个个函数中; 当程序中的函数多变时, 将函数拆分到不同的模块
// 或文件中, 而模块化编程的核心是面向对象程序接口(api)编程.
//
// 除了 ./call1.go, ./call2.go 中对 SayHello() 函数的调用方式, 也可以先抽象出
// 一个名为 hello 的模块, 模块的全部接口函数都在 hello.h 头文件中定义
//
void SayHello(const char* s);

// 虽然只有 SayHello() 函数的声明, 但是作为 hello 模块的用户, 可以直接使用
// SayHello() 函数, 而无须关心函数的具体实现; 而作为 SayHello() 函数的实现者,
// 函数的实现只要满足头文件中函数的声明的规范即可; 
// ./hello1.c 实现了函数 SayHello().
//

