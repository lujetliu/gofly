package main

/*
	标识(zhi4符规则和特殊标志

	go 语言的标识符可以由绝对的包路径加标识符本身定位, 因此允许不同包中的标识
	符同名;

	go 汇编中可以定义仅当前文件可以访问的私有标识符, 以 <> 为扩展名, 如:
	- GLOBL file_private<>(SB), $1
	- ./variable/pkg/slice_amd64.s 中 <> 的使用
	这样可以减少私有标识符对其他文件内标识符命名的干扰;

	go 汇编语言还在 textflag.h 文件中定义了一些标志, 其中用于变量的标志:
	- DUPOK: 表示该变量对应的标识符可能有多个, 在链接时只选择其中之即可(用于
		合并相同的常量字符串, 减少重复数据占用的空间);
	- RODATA: 表示该变量定义在只读内存段, 因此后续任何对此变量的修改操作将
		导致异常(recover() 也无法捕获) TODO: 实验
	- NOPTR: 表示该变量的内部不含指针数据, 让垃圾回收器忽略对该变量的扫描; 如果
		变量已经在 go 代码中声明过, go 编译器会自动分析出改变了是否包含指针,
		此时可以省略 NOPTR 标志;
	多个标志之间用 | 隔开

*/
